//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRentalSystemClient.CarServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/CarRentalSystem")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CapacityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DriverCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FuelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberPlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RentPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Capacity {
            get {
                return this.CapacityField;
            }
            set {
                if ((this.CapacityField.Equals(value) != true)) {
                    this.CapacityField = value;
                    this.RaisePropertyChanged("Capacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarModel {
            get {
                return this.CarModelField;
            }
            set {
                if ((object.ReferenceEquals(this.CarModelField, value) != true)) {
                    this.CarModelField = value;
                    this.RaisePropertyChanged("CarModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DriverCost {
            get {
                return this.DriverCostField;
            }
            set {
                if ((this.DriverCostField.Equals(value) != true)) {
                    this.DriverCostField = value;
                    this.RaisePropertyChanged("DriverCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FuelType {
            get {
                return this.FuelTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FuelTypeField, value) != true)) {
                    this.FuelTypeField = value;
                    this.RaisePropertyChanged("FuelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mileage {
            get {
                return this.MileageField;
            }
            set {
                if ((this.MileageField.Equals(value) != true)) {
                    this.MileageField = value;
                    this.RaisePropertyChanged("Mileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberPlate {
            get {
                return this.NumberPlateField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberPlateField, value) != true)) {
                    this.NumberPlateField = value;
                    this.RaisePropertyChanged("NumberPlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RentPrice {
            get {
                return this.RentPriceField;
            }
            set {
                if ((this.RentPriceField.Equals(value) != true)) {
                    this.RentPriceField = value;
                    this.RaisePropertyChanged("RentPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CarServiceReference.ICarService")]
    public interface ICarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCars", ReplyAction="http://tempuri.org/ICarService/GetCarsResponse")]
        System.Data.DataSet GetCars();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCars", ReplyAction="http://tempuri.org/ICarService/GetCarsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCarsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCar", ReplyAction="http://tempuri.org/ICarService/GetCarResponse")]
        CarRentalSystemClient.CarServiceReference.Car GetCar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCar", ReplyAction="http://tempuri.org/ICarService/GetCarResponse")]
        System.Threading.Tasks.Task<CarRentalSystemClient.CarServiceReference.Car> GetCarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/AddCar", ReplyAction="http://tempuri.org/ICarService/AddCarResponse")]
        bool AddCar(CarRentalSystemClient.CarServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/AddCar", ReplyAction="http://tempuri.org/ICarService/AddCarResponse")]
        System.Threading.Tasks.Task<bool> AddCarAsync(CarRentalSystemClient.CarServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/EditCar", ReplyAction="http://tempuri.org/ICarService/EditCarResponse")]
        bool EditCar(CarRentalSystemClient.CarServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/EditCar", ReplyAction="http://tempuri.org/ICarService/EditCarResponse")]
        System.Threading.Tasks.Task<bool> EditCarAsync(CarRentalSystemClient.CarServiceReference.Car car);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/DeleteCar", ReplyAction="http://tempuri.org/ICarService/DeleteCarResponse")]
        bool DeleteCar(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/DeleteCar", ReplyAction="http://tempuri.org/ICarService/DeleteCarResponse")]
        System.Threading.Tasks.Task<bool> DeleteCarAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCarName", ReplyAction="http://tempuri.org/ICarService/GetCarNameResponse")]
        string GetCarName(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCarName", ReplyAction="http://tempuri.org/ICarService/GetCarNameResponse")]
        System.Threading.Tasks.Task<string> GetCarNameAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCarsByModel", ReplyAction="http://tempuri.org/ICarService/GetCarsByModelResponse")]
        System.Data.DataSet GetCarsByModel(string model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCarsByModel", ReplyAction="http://tempuri.org/ICarService/GetCarsByModelResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCarsByModelAsync(string model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCarsByFuelType", ReplyAction="http://tempuri.org/ICarService/GetCarsByFuelTypeResponse")]
        System.Data.DataSet GetCarsByFuelType(string fuel_type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICarService/GetCarsByFuelType", ReplyAction="http://tempuri.org/ICarService/GetCarsByFuelTypeResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetCarsByFuelTypeAsync(string fuel_type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICarServiceChannel : CarRentalSystemClient.CarServiceReference.ICarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CarServiceClient : System.ServiceModel.ClientBase<CarRentalSystemClient.CarServiceReference.ICarService>, CarRentalSystemClient.CarServiceReference.ICarService {
        
        public CarServiceClient() {
        }
        
        public CarServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CarServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetCars() {
            return base.Channel.GetCars();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCarsAsync() {
            return base.Channel.GetCarsAsync();
        }
        
        public CarRentalSystemClient.CarServiceReference.Car GetCar(int id) {
            return base.Channel.GetCar(id);
        }
        
        public System.Threading.Tasks.Task<CarRentalSystemClient.CarServiceReference.Car> GetCarAsync(int id) {
            return base.Channel.GetCarAsync(id);
        }
        
        public bool AddCar(CarRentalSystemClient.CarServiceReference.Car car) {
            return base.Channel.AddCar(car);
        }
        
        public System.Threading.Tasks.Task<bool> AddCarAsync(CarRentalSystemClient.CarServiceReference.Car car) {
            return base.Channel.AddCarAsync(car);
        }
        
        public bool EditCar(CarRentalSystemClient.CarServiceReference.Car car) {
            return base.Channel.EditCar(car);
        }
        
        public System.Threading.Tasks.Task<bool> EditCarAsync(CarRentalSystemClient.CarServiceReference.Car car) {
            return base.Channel.EditCarAsync(car);
        }
        
        public bool DeleteCar(int id) {
            return base.Channel.DeleteCar(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCarAsync(int id) {
            return base.Channel.DeleteCarAsync(id);
        }
        
        public string GetCarName(int id) {
            return base.Channel.GetCarName(id);
        }
        
        public System.Threading.Tasks.Task<string> GetCarNameAsync(int id) {
            return base.Channel.GetCarNameAsync(id);
        }
        
        public System.Data.DataSet GetCarsByModel(string model) {
            return base.Channel.GetCarsByModel(model);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCarsByModelAsync(string model) {
            return base.Channel.GetCarsByModelAsync(model);
        }
        
        public System.Data.DataSet GetCarsByFuelType(string fuel_type) {
            return base.Channel.GetCarsByFuelType(fuel_type);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetCarsByFuelTypeAsync(string fuel_type) {
            return base.Channel.GetCarsByFuelTypeAsync(fuel_type);
        }
    }
}
